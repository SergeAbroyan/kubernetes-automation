---
- name: Install and Configure Kubernetes Control Plane
  hosts: master
  become: yes
  tasks:



    - name: Ensure overlay and br_netfilter are loaded on boot
      lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: "{{ item }}"
        create: yes
      with_items:
        - overlay
        - br_netfilter

    - name: Ensure correct permissions for kernel modules file
      file:
        path: /etc/modules-load.d/k8s.conf
        owner: root
        group: root
        mode: '0644'

    - name: Load kernel modules immediately
      shell: |
        modprobe overlay
        modprobe br_netfilter


    - name: Ensure correct ownership of kernel module config file
      file:
        path: /etc/modules-load.d/k8s.conf
        owner: root
        group: root
        mode: '0644'

    - name: Load modules immediately
      command: modprobe overlay && modprobe br_netfilter

    - name: Ensure sysctl settings for Kubernetes networking
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: "{{ item }}"
        create: yes
      with_items:
        - "net.bridge.bridge-nf-call-iptables = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"
        - "net.ipv4.ip_forward = 1"

    - name: Ensure correct permissions for sysctl config file
      file:
        path: /etc/sysctl.d/k8s.conf
        owner: root
        group: root
        mode: '0644'

    - name: Apply sysctl settings
      command: sysctl --system


    ### ✅ 2. Install Docker ###
    - name: Enable Docker on Amazon Linux 2
      command: amazon-linux-extras enable docker

    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Start and Enable Docker Service
      systemd:
        name: docker
        state: started
        enabled: yes

    ### ✅ 3. Install Kubernetes ###
    - name: Add Kubernetes YUM Repository
      copy:
        dest: /etc/yum.repos.d/kubernetes.repo
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key

    - name: Install Kubernetes Packages (kubeadm, kubelet, kubectl)
      yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable and Start Kubelet Service
      systemd:
        name: kubelet
        enabled: yes
        state: started

    ### ✅ 4. Initialize Kubernetes Control Plane ###
    - name: Initialize Kubernetes Control Plane
      command: kubeadm init --control-plane-endpoint "{{ ansible_host }}" --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Configure kubectl for ec2-user
      file:
        path: /home/ec2-user/.kube
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy admin.conf to user kubeconfig
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ec2-user/.kube/config
        remote_src: yes
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    ### ✅ 5. Install Calico Network Plugin ###
    - name: Install Calico Network Plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    ### ✅ 6. Generate Worker Node Join Command ###
    - name: Generate Worker Node Join Command
      command: kubeadm token create --print-join-command
      register: kubeadm_join_command

    - name: Save Join Command to File
      copy:
        content: "{{ kubeadm_join_command.stdout }}"
        dest: /var/lib/kubeadm_join.sh
        mode: '0644'
