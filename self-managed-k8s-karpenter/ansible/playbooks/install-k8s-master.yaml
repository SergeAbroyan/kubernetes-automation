---
- name: Install and Configure Kubernetes Control Plane
  hosts: master
  become: yes
  tasks:

    ### ✅ 1. Ensure kernel modules and networking settings are loaded ###
    - name: Load kernel modules on boot
      lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: "{{ item }}"
        create: yes
      with_items:
        - overlay
        - br_netfilter

    - name: Load kernel modules immediately
      shell: |
        modprobe overlay
        modprobe br_netfilter

    - name: Configure sysctl settings for Kubernetes networking
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: "{{ item }}"
        create: yes
      with_items:
        - "net.bridge.bridge-nf-call-iptables = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"
        - "net.ipv4.ip_forward = 1"

    - name: Apply sysctl settings
      command: sysctl --system

    ### ✅ 2. Install Containerd & Dependencies ###
    - name: Install dependencies
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - containerd
        state: present

    - name: Configure containerd
      shell: |
        containerd config default | tee /etc/containerd/config.toml
        systemctl restart containerd
        systemctl enable containerd

    ### ✅ 3. Install Docker ###
    - name: Enable and install Docker
      shell: |
        amazon-linux-extras enable docker
        yum install -y docker

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    ### ✅ 4. Install Kubernetes Components ###
    - name: Add Kubernetes YUM Repository
      copy:
        dest: /etc/yum.repos.d/kubernetes.repo
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key

    - name: Install Kubernetes Packages (kubelet, kubeadm, kubectl)
      yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable and Start Kubelet Service
      systemd:
        name: kubelet
        enabled: yes
        state: started

    ### ✅ 5. Initialize Kubernetes Control Plane ###
    - name: Initialize Kubernetes
      command: kubeadm init --control-plane-endpoint "{{ ansible_host }}" --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Configure kubectl for ec2-user
      file:
        path: /home/ec2-user/.kube
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy kubeconfig to user home
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ec2-user/.kube/config
        remote_src: yes
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    ### ✅ 6. Install Calico Network Plugin ###
    - name: Apply Calico CNI
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    ### ✅ 7. Generate Worker Node Join Command ###
    - name: Generate Worker Join Command
      command: kubeadm token create --print-join-command
      register: kubeadm_join_command

    - name: Save Join Command to File
      copy:
        content: "{{ kubeadm_join_command.stdout }}"
        dest: /var/lib/kubeadm_join.sh
        mode: '0644'
